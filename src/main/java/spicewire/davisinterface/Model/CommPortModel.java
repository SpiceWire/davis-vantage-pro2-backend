package spicewire.davisinterface.Model;

public class CommPortModel {
    public static void commPortModel(){

    }



    @Override
    public String toString(){
        StringBuilder cpmString = new StringBuilder();
        cpmString.append("commPortList: ").append(getCommPortList());
        cpmString.append("comPortIndex: ").append(getComPortIndex());
        cpmString.append("commPort: ").append(getCommPort());
        cpmString.append("commPortDescription: ").append(getCommPortDescription());
        cpmString.append("commPortPath: ").append(getCommPortPath());
        cpmString.append("baudRate: ").append(getBaudRate());
        cpmString.append("dataBits: ").append(getDataBits());
        cpmString.append("stopBits: ").append(getStopBits());
        cpmString.append("parity: ").append(getParity());
        cpmString.append("commParamsSet: ").append(isCommParamsSet());
        cpmString.append("timeoutModeSet: ").append(isTimeoutModeSet());
        cpmString.append("last updated by: ").append(getUpdatedBy());

        cpmString.append("Baud set?      ").append(isBaudSet());
        cpmString.append("Data Bits set? ").append(isDataBitsSet());
        cpmString.append("Stop Bits set? ").append(isStopBitsSet());
        cpmString.append("Parity set?    ").append(isParitySet());
        cpmString.append("Com Port set?  ").append(isComPortSet());
        return cpmString.toString();
    }


    /**
     * List of available com ports. Generated by Serial Port class.
     */
    private static String[] commPortList;

    /**
     * Index number of user-selected com port in the com port list. Set by View.
     */
    private static int comPortIndex;

    /**
     * Name of user-selected com port (e.g. "COM4"). Set by view, also generated by Serial Port class.
     */
    private static String commPort;

    /**
     * Description of user-selected com port. Generated by Serial Port class.
     */
    private static String commPortDescription;

    /**
     * System path of user-selected com port. Generated by Serial Port class.
     */
    private static String commPortPath;

    /**
     * Baud rate of com port after being set. Selected by View before being set and
     * reported by Serial Port after being set.
     * 1200, 2400, 4800, 9600, or 19200. Davis default:19200.
     */
    private static int baudRate;

    /**
     * Data bits of com port. Selected by View before being set and reported by Serial Port
     * after being set.
     * 7 or 8. Davis default: 8
     */
    private static int dataBits;

    /**
     * Index of selected bits of com port. Selected by View before being set and reported by Serial Port
     * after being set.
     *  0, 1, 2, 3 (index from list {0, 1, 1.5, 2}) Davis default: 1
     */
    private static int stopBits;

    /**
     * Index of selected parity of com port. Selected by View before being set and reported by Serial Port
     * after being set.
     * 0, 1, 2 (index from list {no, even, odd}  Davis default: 1
     */
    private static int parity;

    /**
     * True if com port params have been set.
     */
    private static boolean commParamsSet;

    /**
     * Name of last module to update the CommPortModel. Updated by View, Controller, Serial Port.
     *
     */
    private static String updatedBy;

    /**
     * Boolean set by Serial Port after confirmation that the parameter was set successfully.
     */
    private static boolean comPortSet;

    /**
     * Boolean set by Serial Port after confirmation that the parameter was set successfully.
     */
    private static boolean baudSet;

    /**
     * Boolean set by Serial Port after confirmation that the parameter was set successfully.
     */
    private static boolean dataBitsSet;

    /**
     * Boolean set by Serial Port after confirmation that the parameter was set successfully.
     */
    private static boolean stopBitsSet;

    /**
     * Boolean set by Serial Port after confirmation that the parameter was set successfully.
     */
    private static boolean paritySet;

    /**
     * See Fazecast JSerialComm for complete documentation.
     * TIMEOUT_NONBLOCKING: 0
     * TIMEOUT_READ_BLOCKING: 16
     * TIMEOUT_READ_SEMI_BLOCKING: 1
     * TIMEOUT_SCANNER: 4096
     * TIMEOUT_WRITE_BLOCKING: 256
     * Default: 0
     */
    private static int timeoutMode;

    /**
     * See Fazecast JSerialComm for complete documentation.
     * The number of milliseconds of inactivity to tolerate before returning from a readBytes(byte[],int) call.
     * Default: 0
     */
    private static int readTimeout;

    /**
     * Boolean set by Serial Port after confirmation that the parameter was set successfully.
     * TimeoutMode, ReadTimeout and WriteTimeout are set at the same time and share a boolean.
     */
    private static boolean timeoutModeSet;

    public static boolean isTimeoutModeSet() {
        return timeoutModeSet;
    }

    public static void setTimeoutModeSet(boolean timeoutModeSet) {
        CommPortModel.timeoutModeSet = timeoutModeSet;
    }

    public static int getTimeoutMode() {
        return timeoutMode;
    }

    public static void setTimeoutMode(int timeoutMode) {
        CommPortModel.timeoutMode = timeoutMode;
    }

    public static int getReadTimeout() {
        return readTimeout;
    }

    public static void setReadTimeout(int readTimeout) {
        CommPortModel.readTimeout = readTimeout;
    }

    public static int getWriteTimeout() {
        return writeTimeout;
    }

    public static void setWriteTimeout(int writeTimeout) {
        CommPortModel.writeTimeout = writeTimeout;
    }

    /**
     * The number of milliseconds of inactivity to tolerate before returning from a writeBytes(byte[],int) call
     * (effective only on Windows).
     * Default: 0
     */
    private static int writeTimeout;

    public static String getUpdatedBy() {
        return updatedBy;
    }

    public static void setUpdatedBy(String updatedBy) {
        CommPortModel.updatedBy = updatedBy;
    }

    public static String[] getCommPortList() {
        return commPortList;
    }

    public static void setCommPortList(String[] commPortList) {
        CommPortModel.commPortList = commPortList;
    }

    public static int getComPortIndex() {
        return comPortIndex;
    }

    public static void setComPortIndex(int comPortIndex) {
        CommPortModel.comPortIndex = comPortIndex;
    }

    public static String getCommPort() {
        return commPort;
    }

    public static void setCommPort(String commPort) {
        CommPortModel.commPort = commPort;
    }

    public static String getCommPortDescription() {
        return commPortDescription;
    }

    public static void setCommPortDescription(String commPortDescription) {
        CommPortModel.commPortDescription = commPortDescription;
    }

    public static String getCommPortPath() {
        return commPortPath;
    }

    public static void setCommPortPath(String commPortPath) {
        CommPortModel.commPortPath = commPortPath;
    }

    public static int getBaudRate() {
        return baudRate;
    }

    public static void setBaudRate(int baudRate) {
        CommPortModel.baudRate = baudRate;
    }

    public static int getStopBits() {
        return stopBits;
    }

    public static void setStopBits(int stopBits) {
        CommPortModel.stopBits = stopBits;
    }

    public static int getDataBits() {
        return dataBits;
    }

    public static void setDataBits(int dataBits) {
        CommPortModel.dataBits = dataBits;
    }

    public static int getParity() {
        return parity;
    }

    public static void setParity(int parity) {
        CommPortModel.parity = parity;
    }

    public static boolean isCommParamsSet() {
        return commParamsSet;
    }

    public static void setCommParamsSet(boolean commParamsSet) {
        CommPortModel.commParamsSet = commParamsSet;
    }

    public static boolean isComPortSet() {
        return comPortSet;
    }

    public static void setComPortSet(boolean comPortSet) {
        CommPortModel.comPortSet = comPortSet;
    }

    public static boolean isBaudSet() {
        return baudSet;
    }

    public static void setBaudSet(boolean baudSet) {
        CommPortModel.baudSet = baudSet;
    }

    public static boolean isDataBitsSet() {
        return dataBitsSet;
    }

    public static void setDataBitsSet(boolean dataBitsSet) {
        CommPortModel.dataBitsSet = dataBitsSet;
    }

    public static boolean isStopBitsSet() {
        return stopBitsSet;
    }

    public static void setStopBitsSet(boolean stopBitsSet) {
        CommPortModel.stopBitsSet = stopBitsSet;
    }

    public static boolean isParitySet() {
        return paritySet;
    }

    public static void setParitySet(boolean paritySet) {
        CommPortModel.paritySet = paritySet;
    }
}
